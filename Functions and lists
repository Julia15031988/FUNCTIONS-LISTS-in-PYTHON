#Functions and lists

# 1
#adding module for generating random numbers
import random
#function for reflection the list/
#Function arguments - as a list
def show(a):
    #length of the function
    n=len(a)
    #first phrase
    print(n, " D - vector: <",  sep= "",  end="")
    #cycle for reflection the elements
    for i in range (n-1):
        #reflcet lists elements
        print (a[1], end= "|")
    #reflect the last element in the list
    print (a[n-1],  ">.",  sep="")
# Function for creating the list with random integer elements
#Function argument  -the number of elements in the list
def rand_vector(n):
    #empty list
    r=[]
    #cycle for adding new elements in the end of the list
    for i in range (n):
        #adding random number  in the end of the list
        r.append(random.randint(0,6))
    return r
#A function to calculate the scalar product  of two vectors
#Arguments of functions are lists
def scal_prod (a,b):
    #The length of the first list
    Na=len(a)
    #The length of the second list
    Nb=len(b)
    #the smallest from two values
    N=min(Na,Nb)
    # The initial value of the sum(determined via the scalar product)
    s=0
    #cycle for calculating the sum
    for i in range (N):
        s+=a[i]*b[i]
    return s
#Initialization of the generator of random values
random.seed (2014)
#first randon vector
a=rand_vector(3)
#second randon vector
b=rand_vector(5)
#reflect first vector
show(a)
#reflect second vector
show(b)
#calculate scalar sum
p=scal_prod(a,b)
#reflect result
print (p)



â„–2
#module for generating random numbers
from random import *
#the function for creating matrix with random elements
def rand_matrix(n,m):
    #create matrix with random numbers
    A=[ [randint(0,9) for j in range (m)] for i in range (n)]
    #result of function
    return A
#function for unit matrix
def unit_matrix (n):
    #unit matrix
    A=[ [int(i==j) for i in range (n)]  for j in range (n)]
    #result of function
    return A
#function for calculation of product of two matrix
def mult_matrix (A,B):
    #size of matrix
    n=len(A)
    #Matrix  -result with zero meaning
    C=[[0 for i in range(n)] for j in range (n)]
    #first index
    for i in range (n):
        #second index
        for j in range (n):
            #inner index for which we take sum
            for k in range(n):
                #add product in sum
                C[i][j]+=A[i][k]*B[k][j]
                #result
            return C
#function for reflection of function
def show_matrix(A):
    # sorting rows
    for a in A:
        # sorting elements in rows
        for b in a:
            print (b, end="")

        print()
seed(2014)
#matrix with random elements
A=rand_matrix(3,5);
#matrix as a list
print ("list" , A )
#matrix as it is
print ("this matrix is ")
show_matrix (A)
E=unit_matrix(4)
#reflect matrix
print ("Unit matrix is ")
show_matrix(E)
A1=rand_matrix(3,3)
A2=rand_matrix(3,3)
A3=mult_matrix(A1,A2)
print("First matrix is ")
show_matrix(A1)

print("Second matrix is ")
show_matrix(A2)

print("Product of two matrix is ")
show_matrix(A3)


#3
#module for generating random numbers
from random import *
#the function for creating matrix with random elements
def rand_matrix(n,m):
    #create matrix with random numbers
    A=[ [randint(0,9) for j in range (m)] for i in range (n)]
    #result of function
    return A
#function for unit matrix
def unit_matrix (n):
    #unit matrix
    A=[ [int(i==j) for i in range (n)]  for j in range (n)]
    #result of function
    return A
#function for calculation of product of two matrix
def mult_matrix (A,B):
    #size of matrix
    n=len(A)
    #Matrix  -result with zero meaning
    C=[[0 for i in range(n)] for j in range (n)]
    #first index
    for i in range (n):
        #second index
        for j in range (n):
            #inner index for which we take sum
            for k in range(n):
                #add product in sum
                C[i][j]+=A[i][k]*B[k][j]
                #result
            return C
#function for reflection of function
def show_matrix(A):
    # sorting rows
    for a in A:
        # sorting elements in rows
        for b in a:
            print (b, end="")

        print()
seed(2014)
#matrix with random elements
A=rand_matrix(3,5);
#matrix as a list
print ("list" , A )
#matrix as it is
print ("this matrix is ")
show_matrix (A)
E=unit_matrix(4)
#reflect matrix
print ("Unit matrix is ")
show_matrix(E)
A1=rand_matrix(3,3)
A2=rand_matrix(3,3)
A3=mult_matrix(A1,A2)
print("First matrix is ")
show_matrix(A1)

print("Second matrix is ")
show_matrix(A2)

print("Product of two matrix is ")
show_matrix(A3)
